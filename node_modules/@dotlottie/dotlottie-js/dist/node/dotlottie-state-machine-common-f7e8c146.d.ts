import { ZipOptions } from 'fflate';
import * as valibot from 'valibot';
import { Output } from 'valibot';

declare const GuardSchema: valibot.ObjectSchema<{
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    context_key: valibot.StringSchema<string>;
    condition_type: valibot.StringSchema<string>;
    compare_to: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.NumberSchema<number>, valibot.BooleanSchema<boolean>], string | number | boolean>;
}, {
    type: string;
    context_key: string;
    condition_type: string;
    compare_to: string | number | boolean;
}>;
declare const NumericEventSchema: valibot.ObjectSchema<{
    value: valibot.NumberSchema<number>;
}, {
    value: number;
}>;
declare const BooleanEventSchema: valibot.ObjectSchema<{
    value: valibot.BooleanSchema<boolean>;
}, {
    value: boolean;
}>;
declare const StringEventSchema: valibot.ObjectSchema<{
    value: valibot.StringSchema<string>;
}, {
    value: string;
}>;
declare const PointerEventSchema: valibot.ObjectSchema<{
    target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
}, {
    target?: string | undefined;
}>;
declare const TransitionSchema: valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    from_state: valibot.NumberSchema<number>;
    to_state: valibot.NumberSchema<number>;
    guards: valibot.OptionalSchema<valibot.ArraySchema<valibot.ObjectSchema<{
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        context_key: valibot.StringSchema<string>;
        condition_type: valibot.StringSchema<string>;
        compare_to: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.NumberSchema<number>, valibot.BooleanSchema<boolean>], string | number | boolean>;
    }, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }>, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[]>, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[] | undefined>;
    numeric_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.NumberSchema<number>;
    }, {
        value: number;
    }>, {
        value: number;
    } | undefined>;
    boolean_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.BooleanSchema<boolean>;
    }, {
        value: boolean;
    }>, {
        value: boolean;
    } | undefined>;
    string_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.StringSchema<string>;
    }, {
        value: string;
    }>, {
        value: string;
    } | undefined>;
    on_complete_event: valibot.OptionalSchema<valibot.ObjectSchema<{}, {}>, {} | undefined>;
    on_pointer_down_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_up_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_enter_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_exit_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_move_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
}, {
    type: string;
    from_state: number;
    to_state: number;
    guards?: {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[] | undefined;
    numeric_event?: {
        value: number;
    } | undefined;
    boolean_event?: {
        value: boolean;
    } | undefined;
    string_event?: {
        value: string;
    } | undefined;
    on_complete_event?: {} | undefined;
    on_pointer_down_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_up_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_enter_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_exit_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_move_event?: {
        target?: string | undefined;
    } | undefined;
}>;
declare const TransitionsSchema: valibot.ArraySchema<valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    from_state: valibot.NumberSchema<number>;
    to_state: valibot.NumberSchema<number>;
    guards: valibot.OptionalSchema<valibot.ArraySchema<valibot.ObjectSchema<{
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        context_key: valibot.StringSchema<string>;
        condition_type: valibot.StringSchema<string>;
        compare_to: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.NumberSchema<number>, valibot.BooleanSchema<boolean>], string | number | boolean>;
    }, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }>, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[]>, {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[] | undefined>;
    numeric_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.NumberSchema<number>;
    }, {
        value: number;
    }>, {
        value: number;
    } | undefined>;
    boolean_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.BooleanSchema<boolean>;
    }, {
        value: boolean;
    }>, {
        value: boolean;
    } | undefined>;
    string_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        value: valibot.StringSchema<string>;
    }, {
        value: string;
    }>, {
        value: string;
    } | undefined>;
    on_complete_event: valibot.OptionalSchema<valibot.ObjectSchema<{}, {}>, {} | undefined>;
    on_pointer_down_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_up_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_enter_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_exit_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
    on_pointer_move_event: valibot.OptionalSchema<valibot.ObjectSchema<{
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        target?: string | undefined;
    }>, {
        target?: string | undefined;
    } | undefined>;
}, {
    type: string;
    from_state: number;
    to_state: number;
    guards?: {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[] | undefined;
    numeric_event?: {
        value: number;
    } | undefined;
    boolean_event?: {
        value: boolean;
    } | undefined;
    string_event?: {
        value: string;
    } | undefined;
    on_complete_event?: {} | undefined;
    on_pointer_down_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_up_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_enter_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_exit_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_move_event?: {
        target?: string | undefined;
    } | undefined;
}>, {
    type: string;
    from_state: number;
    to_state: number;
    guards?: {
        type: string;
        context_key: string;
        condition_type: string;
        compare_to: string | number | boolean;
    }[] | undefined;
    numeric_event?: {
        value: number;
    } | undefined;
    boolean_event?: {
        value: boolean;
    } | undefined;
    string_event?: {
        value: string;
    } | undefined;
    on_complete_event?: {} | undefined;
    on_pointer_down_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_up_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_enter_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_exit_event?: {
        target?: string | undefined;
    } | undefined;
    on_pointer_move_event?: {
        target?: string | undefined;
    } | undefined;
}[]>;
declare const ActionSchema: valibot.UnionSchema<[valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    url: valibot.StringSchema<string>;
    target: valibot.StringSchema<string>;
}, {
    type: string;
    target: string;
    url: string;
}>, valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    themeId: valibot.StringSchema<string>;
}, {
    type: string;
    themeId: string;
}>, valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    soundId: valibot.StringSchema<string>;
}, {
    type: string;
    soundId: string;
}>, valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    message: valibot.StringSchema<string>;
}, {
    type: string;
    message: string;
}>], {
    type: string;
    target: string;
    url: string;
} | {
    type: string;
    themeId: string;
} | {
    type: string;
    soundId: string;
} | {
    type: string;
    message: string;
}>;
declare const PlaybackStateSchema: valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    loop: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    autoplay: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    mode: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>, string | undefined>;
    speed: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    marker: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    use_frame_interpolation: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>;
declare const SyncStateSchema: valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    frame_context_key: valibot.StringSchema<string>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>;
declare const FinalStateSchema: valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>;
declare const GlobalStateSchema: valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>;
declare const StateSchema: valibot.UnionSchema<[valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    loop: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    autoplay: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    mode: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>, string | undefined>;
    speed: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    marker: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    use_frame_interpolation: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    frame_context_key: valibot.StringSchema<string>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>], {
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>;
declare const StatesSchema: valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    loop: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    autoplay: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    mode: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>, string | undefined>;
    speed: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    marker: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    use_frame_interpolation: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    frame_context_key: valibot.StringSchema<string>;
    background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
    segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, valibot.ObjectSchema<{
    name: valibot.StringSchema<string>;
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
    exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        url: valibot.StringSchema<string>;
        target: valibot.StringSchema<string>;
    }, {
        type: string;
        target: string;
        url: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        themeId: valibot.StringSchema<string>;
    }, {
        type: string;
        themeId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        soundId: valibot.StringSchema<string>;
    }, {
        type: string;
        soundId: string;
    }>, valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        message: valibot.StringSchema<string>;
    }, {
        type: string;
        message: string;
    }>], {
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    }>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[]>, ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined>;
}, {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>], {
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
}>, ({
    type: string;
    name: string;
    autoplay?: boolean | undefined;
    loop?: boolean | undefined;
    speed?: number | undefined;
    animation_id?: string | undefined;
    mode?: string | undefined;
    marker?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    use_frame_interpolation?: boolean | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    frame_context_key: string;
    animation_id?: string | undefined;
    background_color?: number | undefined;
    segment?: [number, number] | undefined;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
} | {
    type: string;
    name: string;
    reset_context?: string | undefined;
    entry_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
    exit_actions?: ({
        type: string;
        target: string;
        url: string;
    } | {
        type: string;
        themeId: string;
    } | {
        type: string;
        soundId: string;
    } | {
        type: string;
        message: string;
    })[] | undefined;
})[]>;
declare const ListenerSchema: valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    action: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    value: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.BooleanSchema<boolean>, valibot.NumberSchema<number>], string | number | boolean>, string | number | boolean | undefined>;
    context_key: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
}, {
    type: string;
    context_key?: string | undefined;
    value?: string | number | boolean | undefined;
    target?: string | undefined;
    action?: string | undefined;
}>;
declare const ListenersSchemas: valibot.ArraySchema<valibot.ObjectSchema<{
    type: valibot.StringSchema<string>;
    target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    action: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    value: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.BooleanSchema<boolean>, valibot.NumberSchema<number>], string | number | boolean>, string | number | boolean | undefined>;
    context_key: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
}, {
    type: string;
    context_key?: string | undefined;
    value?: string | number | boolean | undefined;
    target?: string | undefined;
    action?: string | undefined;
}>, {
    type: string;
    context_key?: string | undefined;
    value?: string | number | boolean | undefined;
    target?: string | undefined;
    action?: string | undefined;
}[]>;
declare const ContextVariableSchema: valibot.ObjectSchema<{
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    key: valibot.StringSchema<string>;
    value: valibot.UnionSchema<[valibot.NumberSchema<number>, valibot.StringSchema<string>, valibot.BooleanSchema<boolean>], string | number | boolean>;
}, {
    type: string;
    value: string | number | boolean;
    key: string;
}>;
declare const ContextVariablesSchema: valibot.ArraySchema<valibot.ObjectSchema<{
    type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
    key: valibot.StringSchema<string>;
    value: valibot.UnionSchema<[valibot.NumberSchema<number>, valibot.StringSchema<string>, valibot.BooleanSchema<boolean>], string | number | boolean>;
}, {
    type: string;
    value: string | number | boolean;
    key: string;
}>, {
    type: string;
    value: string | number | boolean;
    key: string;
}[]>;
declare const DescriptorSchema: valibot.ObjectSchema<{
    id: valibot.StringSchema<string>;
    initial: valibot.NumberSchema<number>;
}, {
    id: string;
    initial: number;
}>;
declare type DotLottieStates = Output<typeof StatesSchema>;
declare type DotLottieDescriptor = Output<typeof DescriptorSchema>;
declare type DotLottieState = Output<typeof StateSchema>;
declare type DotLottieAction = Output<typeof ActionSchema>;
declare type DotLottieNumericEvent = Output<typeof NumericEventSchema>;
declare type DotLottieBooleanEvent = Output<typeof BooleanEventSchema>;
declare type DotLottieStringEvent = Output<typeof StringEventSchema>;
declare type DotLottiePointerEvent = Output<typeof PointerEventSchema>;
declare type DotLottieGuard = Output<typeof GuardSchema>;
declare type DotLottieContextVariables = Output<typeof ContextVariablesSchema>;
declare type DotLottieListener = Output<typeof ListenerSchema>;
declare type DotLottieListeners = Output<typeof ListenersSchemas>;
declare type DotLottieTransition = Output<typeof TransitionSchema>;
declare type DotLottieTransitions = Output<typeof TransitionsSchema>;
declare const DotLottieStateMachineSchema: valibot.ObjectSchema<{
    descriptor: valibot.ObjectSchema<{
        id: valibot.StringSchema<string>;
        initial: valibot.NumberSchema<number>;
    }, {
        id: string;
        initial: number;
    }>;
    states: valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
        name: valibot.StringSchema<string>;
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        loop: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
        autoplay: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
        mode: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>, string | undefined>;
        speed: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
        marker: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
        segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
        use_frame_interpolation: valibot.OptionalSchema<valibot.BooleanSchema<boolean>, boolean | undefined>;
        reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
        exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
    }, {
        type: string;
        name: string;
        autoplay?: boolean | undefined;
        loop?: boolean | undefined;
        speed?: number | undefined;
        animation_id?: string | undefined;
        mode?: string | undefined;
        marker?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        use_frame_interpolation?: boolean | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    }>, valibot.ObjectSchema<{
        name: valibot.StringSchema<string>;
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        animation_id: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        frame_context_key: valibot.StringSchema<string>;
        background_color: valibot.OptionalSchema<valibot.NumberSchema<number>, number | undefined>;
        segment: valibot.OptionalSchema<valibot.OptionalSchema<valibot.TupleSchema<[valibot.NumberSchema<number>, valibot.NumberSchema<number>], undefined, [number, number]>, [number, number] | undefined>, [number, number] | undefined>;
        reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
        exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
    }, {
        type: string;
        name: string;
        frame_context_key: string;
        animation_id?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    }>, valibot.ObjectSchema<{
        name: valibot.StringSchema<string>;
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
        exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
    }, {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    }>, valibot.ObjectSchema<{
        name: valibot.StringSchema<string>;
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        reset_context: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        entry_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
        exit_actions: valibot.OptionalSchema<valibot.ArraySchema<valibot.UnionSchema<[valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            url: valibot.StringSchema<string>;
            target: valibot.StringSchema<string>;
        }, {
            type: string;
            target: string;
            url: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            themeId: valibot.StringSchema<string>;
        }, {
            type: string;
            themeId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            soundId: valibot.StringSchema<string>;
        }, {
            type: string;
            soundId: string;
        }>, valibot.ObjectSchema<{
            type: valibot.StringSchema<string>;
            message: valibot.StringSchema<string>;
        }, {
            type: string;
            message: string;
        }>], {
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        }>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[]>, ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined>;
    }, {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    }>], {
        type: string;
        name: string;
        autoplay?: boolean | undefined;
        loop?: boolean | undefined;
        speed?: number | undefined;
        animation_id?: string | undefined;
        mode?: string | undefined;
        marker?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        use_frame_interpolation?: boolean | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        frame_context_key: string;
        animation_id?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    }>, ({
        type: string;
        name: string;
        autoplay?: boolean | undefined;
        loop?: boolean | undefined;
        speed?: number | undefined;
        animation_id?: string | undefined;
        mode?: string | undefined;
        marker?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        use_frame_interpolation?: boolean | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        frame_context_key: string;
        animation_id?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    })[]>;
    transitions: valibot.ArraySchema<valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        from_state: valibot.NumberSchema<number>;
        to_state: valibot.NumberSchema<number>;
        guards: valibot.OptionalSchema<valibot.ArraySchema<valibot.ObjectSchema<{
            type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
            context_key: valibot.StringSchema<string>;
            condition_type: valibot.StringSchema<string>;
            compare_to: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.NumberSchema<number>, valibot.BooleanSchema<boolean>], string | number | boolean>;
        }, {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }>, {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }[]>, {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }[] | undefined>;
        numeric_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            value: valibot.NumberSchema<number>;
        }, {
            value: number;
        }>, {
            value: number;
        } | undefined>;
        boolean_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            value: valibot.BooleanSchema<boolean>;
        }, {
            value: boolean;
        }>, {
            value: boolean;
        } | undefined>;
        string_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            value: valibot.StringSchema<string>;
        }, {
            value: string;
        }>, {
            value: string;
        } | undefined>;
        on_complete_event: valibot.OptionalSchema<valibot.ObjectSchema<{}, {}>, {} | undefined>;
        on_pointer_down_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        }, {
            target?: string | undefined;
        }>, {
            target?: string | undefined;
        } | undefined>;
        on_pointer_up_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        }, {
            target?: string | undefined;
        }>, {
            target?: string | undefined;
        } | undefined>;
        on_pointer_enter_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        }, {
            target?: string | undefined;
        }>, {
            target?: string | undefined;
        } | undefined>;
        on_pointer_exit_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        }, {
            target?: string | undefined;
        }>, {
            target?: string | undefined;
        } | undefined>;
        on_pointer_move_event: valibot.OptionalSchema<valibot.ObjectSchema<{
            target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        }, {
            target?: string | undefined;
        }>, {
            target?: string | undefined;
        } | undefined>;
    }, {
        type: string;
        from_state: number;
        to_state: number;
        guards?: {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }[] | undefined;
        numeric_event?: {
            value: number;
        } | undefined;
        boolean_event?: {
            value: boolean;
        } | undefined;
        string_event?: {
            value: string;
        } | undefined;
        on_complete_event?: {} | undefined;
        on_pointer_down_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_up_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_enter_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_exit_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_move_event?: {
            target?: string | undefined;
        } | undefined;
    }>, {
        type: string;
        from_state: number;
        to_state: number;
        guards?: {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }[] | undefined;
        numeric_event?: {
            value: number;
        } | undefined;
        boolean_event?: {
            value: boolean;
        } | undefined;
        string_event?: {
            value: string;
        } | undefined;
        on_complete_event?: {} | undefined;
        on_pointer_down_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_up_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_enter_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_exit_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_move_event?: {
            target?: string | undefined;
        } | undefined;
    }[]>;
    listeners: valibot.ArraySchema<valibot.ObjectSchema<{
        type: valibot.StringSchema<string>;
        target: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        action: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
        value: valibot.OptionalSchema<valibot.UnionSchema<[valibot.StringSchema<string>, valibot.BooleanSchema<boolean>, valibot.NumberSchema<number>], string | number | boolean>, string | number | boolean | undefined>;
        context_key: valibot.OptionalSchema<valibot.StringSchema<string>, string | undefined>;
    }, {
        type: string;
        context_key?: string | undefined;
        value?: string | number | boolean | undefined;
        target?: string | undefined;
        action?: string | undefined;
    }>, {
        type: string;
        context_key?: string | undefined;
        value?: string | number | boolean | undefined;
        target?: string | undefined;
        action?: string | undefined;
    }[]>;
    context_variables: valibot.ArraySchema<valibot.ObjectSchema<{
        type: valibot.UnionSchema<[valibot.StringSchema<string>, valibot.StringSchema<string>, valibot.StringSchema<string>], string>;
        key: valibot.StringSchema<string>;
        value: valibot.UnionSchema<[valibot.NumberSchema<number>, valibot.StringSchema<string>, valibot.BooleanSchema<boolean>], string | number | boolean>;
    }, {
        type: string;
        value: string | number | boolean;
        key: string;
    }>, {
        type: string;
        value: string | number | boolean;
        key: string;
    }[]>;
}, {
    states: ({
        type: string;
        name: string;
        autoplay?: boolean | undefined;
        loop?: boolean | undefined;
        speed?: number | undefined;
        animation_id?: string | undefined;
        mode?: string | undefined;
        marker?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        use_frame_interpolation?: boolean | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        frame_context_key: string;
        animation_id?: string | undefined;
        background_color?: number | undefined;
        segment?: [number, number] | undefined;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    } | {
        type: string;
        name: string;
        reset_context?: string | undefined;
        entry_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
        exit_actions?: ({
            type: string;
            target: string;
            url: string;
        } | {
            type: string;
            themeId: string;
        } | {
            type: string;
            soundId: string;
        } | {
            type: string;
            message: string;
        })[] | undefined;
    })[];
    descriptor: {
        id: string;
        initial: number;
    };
    transitions: {
        type: string;
        from_state: number;
        to_state: number;
        guards?: {
            type: string;
            context_key: string;
            condition_type: string;
            compare_to: string | number | boolean;
        }[] | undefined;
        numeric_event?: {
            value: number;
        } | undefined;
        boolean_event?: {
            value: boolean;
        } | undefined;
        string_event?: {
            value: string;
        } | undefined;
        on_complete_event?: {} | undefined;
        on_pointer_down_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_up_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_enter_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_exit_event?: {
            target?: string | undefined;
        } | undefined;
        on_pointer_move_event?: {
            target?: string | undefined;
        } | undefined;
    }[];
    listeners: {
        type: string;
        context_key?: string | undefined;
        value?: string | number | boolean | undefined;
        target?: string | undefined;
        action?: string | undefined;
    }[];
    context_variables: {
        type: string;
        value: string | number | boolean;
        key: string;
    }[];
}>;
declare type DotLottieStateMachine = Output<typeof DotLottieStateMachineSchema>;

/**
 * Copyright 2023 Design Barn Inc.
 */

interface DotLottieStateMachineCommonOptions {
    context_variables: DotLottieContextVariables;
    descriptor: DotLottieDescriptor;
    listeners: DotLottieListeners;
    states: DotLottieStates;
    transitions: DotLottieTransitions;
    zipOptions?: ZipOptions;
}
declare class DotLottieStateMachineCommon {
    protected _descriptor: DotLottieDescriptor;
    protected _zipOptions: ZipOptions;
    protected _states: DotLottieStates;
    protected _transitions: DotLottieTransition[];
    protected _listeners: DotLottieListener[];
    protected _contextVariables: DotLottieContextVariables;
    constructor(options: DotLottieStateMachineCommonOptions);
    get zipOptions(): ZipOptions;
    set zipOptions(zipOptions: ZipOptions);
    get id(): string;
    set id(id: string);
    get states(): DotLottieStates;
    set states(states: DotLottieStates);
    get transitions(): DotLottieTransition[];
    set transitions(transitions: DotLottieTransition[]);
    get listeners(): DotLottieListener[];
    set listeners(listeners: DotLottieListener[]);
    get contextVariables(): DotLottieContextVariables;
    set contextVariables(contextVariables: DotLottieContextVariables);
    get initial(): number;
    set initial(initial: number);
    get descriptor(): DotLottieDescriptor;
    set descriptor(descriptor: DotLottieDescriptor);
    toString(): string;
    protected _requireValidId(id: string | undefined): void;
    protected _requireValidDescriptor(descriptor: DotLottieDescriptor): void;
    protected _requireValidStates(states: DotLottieStates): void;
    protected _requireValidContextVariables(contextVariables: DotLottieContextVariables): void;
    protected _requireValidListeners(listeners: DotLottieListeners): void;
    protected _requireValidTransitions(transitions: DotLottieTransitions): void;
}

export { ContextVariableSchema as C, DotLottieStateMachineCommon as D, FinalStateSchema as F, GuardSchema as G, ListenerSchema as L, PlaybackStateSchema as P, SyncStateSchema as S, TransitionSchema as T, DotLottieStateMachineCommonOptions as a, TransitionsSchema as b, GlobalStateSchema as c, StateSchema as d, StatesSchema as e, ListenersSchemas as f, ContextVariablesSchema as g, DescriptorSchema as h, DotLottieStates as i, DotLottieDescriptor as j, DotLottieState as k, DotLottieAction as l, DotLottieNumericEvent as m, DotLottieBooleanEvent as n, DotLottieStringEvent as o, DotLottiePointerEvent as p, DotLottieGuard as q, DotLottieContextVariables as r, DotLottieListener as s, DotLottieListeners as t, DotLottieTransition as u, DotLottieTransitions as v, DotLottieStateMachineSchema as w, DotLottieStateMachine as x };
